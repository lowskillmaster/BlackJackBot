from aiogram import F, types, Router
from aiogram.filters import CommandStart, Command

from kbds import reply,  inline
from card_game import Game

user_private_router = Router()

game = None


@user_private_router.message(CommandStart())
async def start_cmd(message: types.Message):
    await message.answer('–ö–∞—Ç–µ–≥–∞—Ä–∏—á–µ—Å–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å–≤—É—é –≤ –û–ß–ö–û üòàüòàüòà\n–í—ã–±–µ—Ä–∏ –≤ –º–µ–Ω—é /rule, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞\n–í—ã–±–µ—Ä–∏ –≤ –º–µ–Ω—é /game, —á—Ç–æ–±—ã —Å—ã–≥—Ä–∞—Ç—å')



@user_private_router.message(Command('menu'))
async def echo(message: types.Message):
    await message.answer("–ú–ï–ù–Æ")


@user_private_router.message(Command('game'))
async def game(message: types.Message):
    await message.answer('–í—ã–±–µ—Ä–∏ –≤ –º–µ–Ω—é /rule, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞\n')
    await message.answer('–ù–∞–∂–º–∏ "–î–∞", —á—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å',
                         reply_markup=reply.start_kb.as_markup(
                             resize_keyboard=True,
                         ))

@user_private_router.message(F.text.lower() == "üìú –ø—Ä–∞–≤–∏–ª–∞")
@user_private_router.message(Command('rule'))
async def send_rules(message: types.Message):
    rules = (
        "–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –≤ –ë–ª—ç–∫–¥–∂–µ–∫:\n"
        "1. –¶–µ–ª—å –∏–≥—Ä—ã ‚Äî –Ω–∞–±—Ä–∞—Ç—å 21 –æ—á–∫–æ –∏–ª–∏ –º–µ–Ω—å—à–µ, –Ω–æ –±–æ–ª—å—à–µ, —á–µ–º —É –¥–∏–ª–µ—Ä–∞.\n"
        "2. –ö–∞—Ä—Ç—ã –æ—Ç 2 –¥–æ 10 –æ—Ü–µ–Ω–∏–≤–∞—é—Ç—Å—è –ø–æ –Ω–æ–º–∏–Ω–∞–ª—É.\n"
        "3. –í–∞–ª–µ—Ç, –î–∞–º–∞, –ö–æ—Ä–æ–ª—å ‚Äî –ø–æ 10 –æ—á–∫–æ–≤.\n"
        "4. –¢—É–∑ –º–æ–∂–µ—Ç —Å—Ç–æ–∏—Ç—å 1 –∏–ª–∏ 11 –æ—á–∫–æ–≤.\n"
        "5. –í—ã –Ω–∞—á–∏–Ω–∞–µ—Ç–µ —Å –¥–≤—É—Ö –∫–∞—Ä—Ç, –∏ –º–æ–∂–µ—Ç–µ –±—Ä–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–∞—Ä—Ç—ã –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –Ω–µ —Ä–µ—à–∏—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –∏–ª–∏ –Ω–µ –ø–µ—Ä–µ–±–µ—Ä–µ—Ç–µ 21.\n"
    )
    await message.answer(rules)


@user_private_router.message(F.text.lower().in_({"–¥–∞", "üëæ c—ã–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞"}))
async def menu_cmd(message: types.Message):
    await message.answer("–û—Ç–ª–∏—á–Ω–æ, –ø—Ä–∏—Å—Ç—É–ø–∏–º –∫ –∏–≥—Ä–µ", reply_markup=reply.game_kb.as_markup(resize_keyboard=True))
    global game
    game = Game()
    game.player.hand = game.deck.deal_card()
    game.player.hand = game.deck.deal_card()
    game.dealer.hand = game.deck.deal_card()
    await message.answer(f"–í–∞—à–∏ –∫–∞—Ä—Ç—ã {game.player.hand}")
    await message.answer(f"–ö–∞—Ä—Ç—ã –î–∏–ª–ª–µ—Ä–∞ {game.dealer.hand}",
                         reply_markup=reply.game_kb.as_markup(resize_keyboard=True))


@user_private_router.message(F.text.lower() == "–Ω–µ—Ç")
async def menu_cmd_no(message: types.Message):
    await message.answer("–•–æ—Ä–æ—à–æ, –∫–∞–∫ –∑–∞—Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ '–¥–∞'")


@user_private_router.message(F.text.lower() == "ü´≥ –≤–∑—è—Ç—å –∫–∞—Ä—Ç—É")
async def rule_cmd_player(message: types.Message):
    global game
    if game is not None:
        game.player.hand = game.deck.deal_card()
        await message.answer(f"–í–∞—à–∏ –∫–∞—Ä—Ç—ã {game.player.hand}")
        if game.player.count >= 21:
            game.dealer.get_card(game.deck)
            result = game.check_win()
            game = None
            await message.answer(result, reply_markup=reply.game_again.as_markup(resize_keyboard=True))
    else:
        await message.answer("–ò–≥—Ä–∞ –Ω–µ –Ω–∞—á–∞—Ç–∞!!!")


@user_private_router.message(F.text.lower() == "‚õîÔ∏è —Å—Ç–æ–ø")
async def rule_cmd_dealer(message: types.Message):
    global game
    if game is not None:
        game.dealer.get_card(game.deck)
        result = game.check_win()
        game = None
        await message.answer(result, reply_markup=reply.game_again.as_markup(resize_keyboard=True))
    else:
        await message.answer("–ò–≥—Ä–∞ –Ω–µ –Ω–∞—á–∞—Ç–∞!!!")